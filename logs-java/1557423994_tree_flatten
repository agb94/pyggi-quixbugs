[{"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 300, "Time": 221.1147220134735, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 286, "Time": 226.3283085823059, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 307, "Time": 216.17649960517883, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 287, "Time": 227.1756935119629, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 306, "Time": 216.9374406337738, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtReplacement({'target': ('FLATTEN.java.xml', 3), 'ingredient': ('FLATTEN.java.xml', 18)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 215, "Time": 263.19341135025024, "BestFitness": 7.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 11,28 ****\n   */\n  public class FLATTEN {\n      public static Object flatten(Object arr) {\n! \tif (arr instanceof ArrayList) {\n!             ArrayList narr = (ArrayList) arr;\n! \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n! \t} else {\n  \t    return flatten(arr);\n  \t}\n      }\n--- 11,20 ----\n   */\n  public class FLATTEN {\n      public static Object flatten(Object arr) {\n! \tif (arr instanceof ArrayList){\n! \t    return flatten(arr);\n! \t}\n!      else {\n  \t    return flatten(arr);\n  \t}\n      }\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 342, "Time": 201.3784475326538, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 15,26 ****\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n--- 15,21 ----\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n"}, {"BestPatch": "StmtReplacement({'target': ('FLATTEN.java.xml', 9), 'ingredient': ('FLATTEN.java.xml', 16)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 345, "Time": 199.25699043273926, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 15,26 ****\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n--- 15,22 ----\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 return result;\n! \t}\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 356, "Time": 195.12009811401367, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 15,26 ****\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n--- 15,21 ----\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 338, "Time": 201.39796781539917, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 15,26 ****\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n--- 15,21 ----\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 351, "Time": 197.69639539718628, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 15,26 ****\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n--- 15,21 ----\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n"}, {"BestPatch": "StmtReplacement({'target': ('FLATTEN.java.xml', 9), 'ingredient': ('FLATTEN.java.xml', 18)}) | StmtReplacement({'target': ('FLATTEN.java.xml', 8), 'ingredient': ('FLATTEN.java.xml', 16)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 290, "Time": 224.9660542011261, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,21 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) return result;\n! \treturn result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 337, "Time": 203.16063952445984, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 15,26 ****\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n--- 15,21 ----\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 301, "Time": 218.78045678138733, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 324, "Time": 208.7198359966278, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 294, "Time": 224.7566533088684, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 307, "Time": 217.62983965873718, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}, {"BestPatch": "StmtReplacement({'target': ('FLATTEN.java.xml', 9), 'ingredient': ('FLATTEN.java.xml', 18)}) | StmtDeletion({'target': ('FLATTEN.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 299, "Time": 221.66018271446228, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 15,26 ****\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n--- 15,21 ----\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 322, "Time": 209.67579174041748, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 15,26 ****\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n--- 15,21 ----\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n  \t    for (Object x : narr) {\n!                 }\n              return result;\n  \t} else {\n  \t    return flatten(arr);\n"}, {"BestPatch": "StmtDeletion({'target': ('FLATTEN.java.xml', 7)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 294, "Time": 222.3662281036377, "BestFitness": 6.0, "diff": "*** before: FLATTEN.java.xml\n--- after: FLATTEN.java.xml\n***************\n*** 14,27 ****\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    for (Object x : narr) {\n!                 if (x instanceof ArrayList) {\n!                     result.addAll((ArrayList) flatten(x));\n!                 } else {\n!                     result.add(flatten(x));\n! \t\t}\n!             }\n!             return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n--- 14,20 ----\n  \tif (arr instanceof ArrayList) {\n              ArrayList narr = (ArrayList) arr;\n  \t    ArrayList result = new ArrayList(50);\n! \t    return result;\n  \t} else {\n  \t    return flatten(arr);\n  \t}\n"}]