[{"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 11), 'ingredient': ('NEXT_PERMUTATION.java.xml', 10), 'direction': 'after'}) | StmtDeletion({'target': ('NEXT_PERMUTATION.java.xml', 26)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 330, "Time": 234.3275327682495, "BestFitness": 1.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 34,39 ****\n--- 34,58 ----\n                              q++;\n                          }\n  \n+                         }\n+                  {\n+                         ArrayList<Integer> next_perm = perm;\n+                         int temp_j = perm.get(j);\n+                         int temp_i = perm.get(i);\n+                         next_perm.set(i,temp_j);\n+                         next_perm.set(j,temp_i);\n+ \n+                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n+                         for (int k=next_perm.size()-1; k!=i; k--) {\n+                             reversed.add(next_perm.get(k));\n+                         }\n+ \n+                         int q = i + 1;\n+                         for (Integer replace : reversed) {\n+                             next_perm.set(q, replace);\n+                             q++;\n+                         }\n+ \n                          return next_perm;\n                      }\n                  }\n"}, {"BestPatch": "StmtReplacement({'target': ('NEXT_PERMUTATION.java.xml', 8), 'ingredient': ('NEXT_PERMUTATION.java.xml', 10)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 210, "Time": 302.10176134109497, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 15,22 ****\n      public static ArrayList<Integer> next_permutation(ArrayList<Integer> perm) {\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n!                 for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 15,21 ----\n      public static ArrayList<Integer> next_permutation(ArrayList<Integer> perm) {\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n!                 for (int j=perm.size()-1; j!=i; j--)  {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n***************\n*** 37,43 ****\n                          return next_perm;\n                      }\n                  }\n-             }\n          }\n  \n          return new ArrayList<Integer>();\n--- 36,41 ----\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 26), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11), 'direction': 'after'}) | StmtDeletion({'target': ('NEXT_PERMUTATION.java.xml', 26)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 361, "Time": 215.26888966560364, "BestFitness": 1.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 34,39 ****\n--- 34,58 ----\n                              q++;\n                          }\n  \n+                         }\n+                 {\n+                         ArrayList<Integer> next_perm = perm;\n+                         int temp_j = perm.get(j);\n+                         int temp_i = perm.get(i);\n+                         next_perm.set(i,temp_j);\n+                         next_perm.set(j,temp_i);\n+ \n+                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n+                         for (int k=next_perm.size()-1; k!=i; k--) {\n+                             reversed.add(next_perm.get(k));\n+                         }\n+ \n+                         int q = i + 1;\n+                         for (Integer replace : reversed) {\n+                             next_perm.set(q, replace);\n+                             q++;\n+                         }\n+ \n                          return next_perm;\n                      }\n                  }\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 11), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11), 'direction': 'after'}) | StmtDeletion({'target': ('NEXT_PERMUTATION.java.xml', 26)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 353, "Time": 222.02577471733093, "BestFitness": 1.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 34,39 ****\n--- 34,58 ----\n                              q++;\n                          }\n  \n+                         }\n+                 {\n+                         ArrayList<Integer> next_perm = perm;\n+                         int temp_j = perm.get(j);\n+                         int temp_i = perm.get(i);\n+                         next_perm.set(i,temp_j);\n+                         next_perm.set(j,temp_i);\n+ \n+                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n+                         for (int k=next_perm.size()-1; k!=i; k--) {\n+                             reversed.add(next_perm.get(k));\n+                         }\n+ \n+                         int q = i + 1;\n+                         for (Integer replace : reversed) {\n+                             next_perm.set(q, replace);\n+                             q++;\n+                         }\n+ \n                          return next_perm;\n                      }\n                  }\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 10), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 203, "Time": 307.52571177482605, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,42 ----\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)){\n!                         ArrayList<Integer> next_perm = perm;\n!                         int temp_j = perm.get(j);\n!                         int temp_i = perm.get(i);\n!                         next_perm.set(i,temp_j);\n!                         next_perm.set(j,temp_i);\n! \n!                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n!                         for (int k=next_perm.size()-1; k!=i; k--) {\n!                             reversed.add(next_perm.get(k));\n!                         }\n! \n!                         int q = i + 1;\n!                         for (Integer replace : reversed) {\n!                             next_perm.set(q, replace);\n!                             q++;\n!                         }\n! \n!                         return next_perm;\n!                     }\n!                  {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 26), 'ingredient': ('NEXT_PERMUTATION.java.xml', 10), 'direction': 'after'}) | StmtDeletion({'target': ('NEXT_PERMUTATION.java.xml', 26)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 340, "Time": 225.99046683311462, "BestFitness": 1.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 34,39 ****\n--- 34,58 ----\n                              q++;\n                          }\n  \n+                         }\n+                  {\n+                         ArrayList<Integer> next_perm = perm;\n+                         int temp_j = perm.get(j);\n+                         int temp_i = perm.get(i);\n+                         next_perm.set(i,temp_j);\n+                         next_perm.set(j,temp_i);\n+ \n+                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n+                         for (int k=next_perm.size()-1; k!=i; k--) {\n+                             reversed.add(next_perm.get(k));\n+                         }\n+ \n+                         int q = i + 1;\n+                         for (Integer replace : reversed) {\n+                             next_perm.set(q, replace);\n+                             q++;\n+                         }\n+ \n                          return next_perm;\n                      }\n                  }\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 10), 'ingredient': ('NEXT_PERMUTATION.java.xml', 9), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 187, "Time": 318.36383843421936, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,42 ----\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i))if (perm.get(j) < perm.get(i)) {\n!                         ArrayList<Integer> next_perm = perm;\n!                         int temp_j = perm.get(j);\n!                         int temp_i = perm.get(i);\n!                         next_perm.set(i,temp_j);\n!                         next_perm.set(j,temp_i);\n! \n!                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n!                         for (int k=next_perm.size()-1; k!=i; k--) {\n!                             reversed.add(next_perm.get(k));\n!                         }\n! \n!                         int q = i + 1;\n!                         for (Integer replace : reversed) {\n!                             next_perm.set(q, replace);\n!                             q++;\n!                         }\n! \n!                         return next_perm;\n!                     }\n!                  {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 10), 'ingredient': ('NEXT_PERMUTATION.java.xml', 27), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 130, "Time": 348.19917917251587, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,23 ----\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i))return new ArrayList<Integer>();\n!      {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 10), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11), 'direction': 'after'}) | StmtDeletion({'target': ('NEXT_PERMUTATION.java.xml', 26)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 349, "Time": 222.8550260066986, "BestFitness": 1.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 34,39 ****\n--- 34,58 ----\n                              q++;\n                          }\n  \n+                         }\n+                 {\n+                         ArrayList<Integer> next_perm = perm;\n+                         int temp_j = perm.get(j);\n+                         int temp_i = perm.get(i);\n+                         next_perm.set(i,temp_j);\n+                         next_perm.set(j,temp_i);\n+ \n+                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n+                         for (int k=next_perm.size()-1; k!=i; k--) {\n+                             reversed.add(next_perm.get(k));\n+                         }\n+ \n+                         int q = i + 1;\n+                         for (Integer replace : reversed) {\n+                             next_perm.set(q, replace);\n+                             q++;\n+                         }\n+ \n                          return next_perm;\n                      }\n                  }\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 11), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 323, "Time": 240.23240780830383, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 36,41 ****\n--- 36,61 ----\n  \n                          return next_perm;\n                      }\n+                 {\n+                         ArrayList<Integer> next_perm = perm;\n+                         int temp_j = perm.get(j);\n+                         int temp_i = perm.get(i);\n+                         next_perm.set(i,temp_j);\n+                         next_perm.set(j,temp_i);\n+ \n+                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n+                         for (int k=next_perm.size()-1; k!=i; k--) {\n+                             reversed.add(next_perm.get(k));\n+                         }\n+ \n+                         int q = i + 1;\n+                         for (Integer replace : reversed) {\n+                             next_perm.set(q, replace);\n+                             q++;\n+                         }\n+ \n+                         return next_perm;\n+                     }\n                  }\n              }\n          }\n"}, {"BestPatch": "StmtReplacement({'target': ('NEXT_PERMUTATION.java.xml', 9), 'ingredient': ('NEXT_PERMUTATION.java.xml', 10)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 160, "Time": 329.6949279308319, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,22 ----\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                      {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 10), 'ingredient': ('NEXT_PERMUTATION.java.xml', 10), 'direction': 'after'}) | StmtDeletion({'target': ('NEXT_PERMUTATION.java.xml', 26)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 334, "Time": 232.31038546562195, "BestFitness": 1.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 34,39 ****\n--- 34,58 ----\n                              q++;\n                          }\n  \n+                         }\n+                  {\n+                         ArrayList<Integer> next_perm = perm;\n+                         int temp_j = perm.get(j);\n+                         int temp_i = perm.get(i);\n+                         next_perm.set(i,temp_j);\n+                         next_perm.set(j,temp_i);\n+ \n+                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n+                         for (int k=next_perm.size()-1; k!=i; k--) {\n+                             reversed.add(next_perm.get(k));\n+                         }\n+ \n+                         int q = i + 1;\n+                         for (Integer replace : reversed) {\n+                             next_perm.set(q, replace);\n+                             q++;\n+                         }\n+ \n                          return next_perm;\n                      }\n                  }\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 10), 'ingredient': ('NEXT_PERMUTATION.java.xml', 27), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 144, "Time": 340.0193042755127, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,23 ----\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i))return new ArrayList<Integer>();\n!      {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n"}, {"BestPatch": "StmtReplacement({'target': ('NEXT_PERMUTATION.java.xml', 8), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 176, "Time": 322.4034836292267, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n-                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,21 ----\n***************\n*** 37,43 ****\n                          return next_perm;\n                      }\n                  }\n-             }\n          }\n  \n          return new ArrayList<Integer>();\n--- 36,41 ----\n"}, {"BestPatch": "StmtReplacement({'target': ('NEXT_PERMUTATION.java.xml', 8), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 235, "Time": 287.83053374290466, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n-                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,21 ----\n***************\n*** 37,43 ****\n                          return next_perm;\n                      }\n                  }\n-             }\n          }\n  \n          return new ArrayList<Integer>();\n--- 36,41 ----\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 11), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11), 'direction': 'after'}) | StmtDeletion({'target': ('NEXT_PERMUTATION.java.xml', 26)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 365, "Time": 212.48948645591736, "BestFitness": 1.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 34,39 ****\n--- 34,58 ----\n                              q++;\n                          }\n  \n+                         }\n+                 {\n+                         ArrayList<Integer> next_perm = perm;\n+                         int temp_j = perm.get(j);\n+                         int temp_i = perm.get(i);\n+                         next_perm.set(i,temp_j);\n+                         next_perm.set(j,temp_i);\n+ \n+                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n+                         for (int k=next_perm.size()-1; k!=i; k--) {\n+                             reversed.add(next_perm.get(k));\n+                         }\n+ \n+                         int q = i + 1;\n+                         for (Integer replace : reversed) {\n+                             next_perm.set(q, replace);\n+                             q++;\n+                         }\n+ \n                          return next_perm;\n                      }\n                  }\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 378, "Time": 205.25702023506165}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 10), 'ingredient': ('NEXT_PERMUTATION.java.xml', 11), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 134, "Time": 347.92390036582947, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,42 ----\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)){\n!                         ArrayList<Integer> next_perm = perm;\n!                         int temp_j = perm.get(j);\n!                         int temp_i = perm.get(i);\n!                         next_perm.set(i,temp_j);\n!                         next_perm.set(j,temp_i);\n! \n!                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n!                         for (int k=next_perm.size()-1; k!=i; k--) {\n!                             reversed.add(next_perm.get(k));\n!                         }\n! \n!                         int q = i + 1;\n!                         for (Integer replace : reversed) {\n!                             next_perm.set(q, replace);\n!                             q++;\n!                         }\n! \n!                         return next_perm;\n!                     }\n!                  {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n"}, {"BestPatch": "StmtInsertion({'target': ('NEXT_PERMUTATION.java.xml', 10), 'ingredient': ('NEXT_PERMUTATION.java.xml', 9), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 175, "Time": 325.77072501182556, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 16,22 ****\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 16,42 ----\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n                  for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i))if (perm.get(j) < perm.get(i)) {\n!                         ArrayList<Integer> next_perm = perm;\n!                         int temp_j = perm.get(j);\n!                         int temp_i = perm.get(i);\n!                         next_perm.set(i,temp_j);\n!                         next_perm.set(j,temp_i);\n! \n!                         ArrayList<Integer> reversed = new ArrayList<Integer>(100);\n!                         for (int k=next_perm.size()-1; k!=i; k--) {\n!                             reversed.add(next_perm.get(k));\n!                         }\n! \n!                         int q = i + 1;\n!                         for (Integer replace : reversed) {\n!                             next_perm.set(q, replace);\n!                             q++;\n!                         }\n! \n!                         return next_perm;\n!                     }\n!                  {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n"}, {"BestPatch": "StmtReplacement({'target': ('NEXT_PERMUTATION.java.xml', 8), 'ingredient': ('NEXT_PERMUTATION.java.xml', 10)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 141, "Time": 342.24650049209595, "BestFitness": 5.0, "diff": "*** before: NEXT_PERMUTATION.java.xml\n--- after: NEXT_PERMUTATION.java.xml\n***************\n*** 15,22 ****\n      public static ArrayList<Integer> next_permutation(ArrayList<Integer> perm) {\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n!                 for (int j=perm.size()-1; j!=i; j--) {\n!                     if (perm.get(j) < perm.get(i)) {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n--- 15,21 ----\n      public static ArrayList<Integer> next_permutation(ArrayList<Integer> perm) {\n          for (int i=perm.size()-2; i!=-1; i--) {\n              if (perm.get(i) < perm.get(i+1)) {\n!                 for (int j=perm.size()-1; j!=i; j--)  {\n                          ArrayList<Integer> next_perm = perm;\n                          int temp_j = perm.get(j);\n                          int temp_i = perm.get(i);\n***************\n*** 37,43 ****\n                          return next_perm;\n                      }\n                  }\n-             }\n          }\n  \n          return new ArrayList<Integer>();\n--- 36,41 ----\n"}]