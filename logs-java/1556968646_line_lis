[{"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 328, "Time": 177.05687475204468}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 332, "Time": 174.7157371044159}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 353, "Time": 166.2718963623047}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 328, "Time": 175.9907410144806}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 335, "Time": 172.11277198791504}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 346, "Time": 168.42494916915894}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 341, "Time": 168.61667943000793}, {"BestPatch": "LineReplacement({'target': ('LIS.java', 27), 'ingredient': ('LIS.java', 29)})", "Success": true, "FitnessEval": 192, "InvalidPatch": 123, "Time": 68.45074367523193, "BestFitness": 0.0, "diff": "*** before: LIS.java\n--- after: LIS.java\n***************\n*** 25,31 ****\n              }\n  \n              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;\n! \n              if (length == longest || val < arr[ends.get(length+1)]) {\n                  ends.put(length+1, i);\n                  longest = length + 1;\n--- 25,31 ----\n              }\n  \n              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;\n!                 ends.put(length+1, i);\n              if (length == longest || val < arr[ends.get(length+1)]) {\n                  ends.put(length+1, i);\n                  longest = length + 1;\n"}, {"BestPatch": "LineDeletion({'target': ('LIS.java', 0)})", "Success": true, "FitnessEval": 3, "InvalidPatch": 2, "Time": 0.9853515625, "BestFitness": 0.0, "diff": "*** before: LIS.java\n--- after: LIS.java\n***************\n*** 1,4 ****\n! package java_programs;\n  import java.util.*;\n  /*\n   * To change this template, choose Tools | Templates\n--- 1,4 ----\n! \n  import java.util.*;\n  /*\n   * To change this template, choose Tools | Templates\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 329, "Time": 175.9316384792328}, {"BestPatch": "LineReplacement({'target': ('LIS.java', 27), 'ingredient': ('LIS.java', 29)})", "Success": true, "FitnessEval": 418, "InvalidPatch": 273, "Time": 148.344664812088, "BestFitness": 0.0, "diff": "*** before: LIS.java\n--- after: LIS.java\n***************\n*** 25,31 ****\n              }\n  \n              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;\n! \n              if (length == longest || val < arr[ends.get(length+1)]) {\n                  ends.put(length+1, i);\n                  longest = length + 1;\n--- 25,31 ----\n              }\n  \n              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;\n!                 ends.put(length+1, i);\n              if (length == longest || val < arr[ends.get(length+1)]) {\n                  ends.put(length+1, i);\n                  longest = length + 1;\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 347, "Time": 167.50063467025757}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 336, "Time": 173.3874638080597}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 345, "Time": 167.98372077941895}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 343, "Time": 168.42373275756836}, {"BestPatch": "LineInsertion({'target': ('LIS.java', 28), 'ingredient': ('LIS.java', 29), 'direction': 'before'})", "Success": true, "FitnessEval": 483, "InvalidPatch": 334, "Time": 161.5175006389618, "BestFitness": 0.0, "diff": "*** before: LIS.java\n--- after: LIS.java\n***************\n*** 26,31 ****\n--- 26,32 ----\n  \n              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;\n  \n+                 ends.put(length+1, i);\n              if (length == longest || val < arr[ends.get(length+1)]) {\n                  ends.put(length+1, i);\n                  longest = length + 1;\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 332, "Time": 174.44892287254333}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 338, "Time": 173.0638473033905}, {"BestPatch": "LineInsertion({'target': ('LIS.java', 28), 'ingredient': ('LIS.java', 29), 'direction': 'before'})", "Success": true, "FitnessEval": 54, "InvalidPatch": 41, "Time": 17.211572408676147, "BestFitness": 0.0, "diff": "*** before: LIS.java\n--- after: LIS.java\n***************\n*** 26,31 ****\n--- 26,32 ----\n  \n              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;\n  \n+                 ends.put(length+1, i);\n              if (length == longest || val < arr[ends.get(length+1)]) {\n                  ends.put(length+1, i);\n                  longest = length + 1;\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 348, "Time": 167.45755577087402}]