[{"BestPatch": "LineReplacement({'target': ('FIND_IN_SORTED.java', 19), 'ingredient': ('FIND_IN_SORTED.java', 17)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 349, "Time": 178.0282337665558, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java\n--- after: FIND_IN_SORTED.java\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "LineReplacement({'target': ('FIND_IN_SORTED.java', 19), 'ingredient': ('FIND_IN_SORTED.java', 13)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 348, "Time": 178.62075281143188, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java\n--- after: FIND_IN_SORTED.java\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return -1;\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 367, "Time": 168.69306874275208}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 365, "Time": 169.49373149871826}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 368, "Time": 168.29345083236694}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 364, "Time": 170.79619789123535}, {"BestPatch": "LineReplacement({'target': ('FIND_IN_SORTED.java', 17), 'ingredient': ('FIND_IN_SORTED.java', 13)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 319, "Time": 194.57203364372253, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java\n--- after: FIND_IN_SORTED.java\n***************\n*** 15,21 ****\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n--- 15,21 ----\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n!             return -1;\n          } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 354, "Time": 175.53237867355347}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 361, "Time": 171.33441519737244}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 355, "Time": 174.78680300712585}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 353, "Time": 175.53468346595764}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 362, "Time": 171.46999549865723}, {"BestPatch": "LineReplacement({'target': ('FIND_IN_SORTED.java', 19), 'ingredient': ('FIND_IN_SORTED.java', 17)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 354, "Time": 175.43363618850708, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java\n--- after: FIND_IN_SORTED.java\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 361, "Time": 173.66433811187744}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 355, "Time": 173.48910236358643}, {"BestPatch": "LineReplacement({'target': ('FIND_IN_SORTED.java', 19), 'ingredient': ('FIND_IN_SORTED.java', 13)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 353, "Time": 176.08297109603882, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java\n--- after: FIND_IN_SORTED.java\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return -1;\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "LineReplacement({'target': ('FIND_IN_SORTED.java', 19), 'ingredient': ('FIND_IN_SORTED.java', 13)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 341, "Time": 182.5529441833496, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java\n--- after: FIND_IN_SORTED.java\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return -1;\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "LineReplacement({'target': ('FIND_IN_SORTED.java', 19), 'ingredient': ('FIND_IN_SORTED.java', 17)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 348, "Time": 179.68784546852112, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java\n--- after: FIND_IN_SORTED.java\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 375, "Time": 165.74619364738464}, {"BestPatch": "None", "Success": false, "FitnessEval": 500, "InvalidPatch": 356, "Time": 174.05022716522217}]