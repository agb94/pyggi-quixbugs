[{"BestPatch": "StmtReplacement({'target': ('RPN_EVAL.java.xml', 14), 'ingredient': ('RPN_EVAL.java.xml', 20)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 271, "Time": 279.39552068710327, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n!             if (Double.class.isInstance(token)) {\n!                 stack.push((Double) token);\n!             } else {\n! \t\ttoken = (String) token;\n!                 Double a = (Double) stack.pop();\n!                 Double b = (Double) stack.pop();\n! \t\tDouble c = 0.0;\n! \t\tBinaryOperator<Double> bin_op = op.get(token);\n! \t\tc = bin_op.apply(a,b);\n!                 stack.push(c);\n!             }\n!         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,30 ----\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n!             token = (String) token;\n!                 }\n  \n          return (Double) stack.pop();\n      }\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 14)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 326, "Time": 243.34273099899292, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n              }\n-         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,29 ----\n"}, {"BestPatch": "StmtReplacement({'target': ('RPN_EVAL.java.xml', 14), 'ingredient': ('RPN_EVAL.java.xml', 21)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 290, "Time": 266.78437638282776, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n!             if (Double.class.isInstance(token)) {\n!                 stack.push((Double) token);\n!             } else {\n! \t\ttoken = (String) token;\n!                 Double a = (Double) stack.pop();\n!                 Double b = (Double) stack.pop();\n! \t\tDouble c = 0.0;\n! \t\tBinaryOperator<Double> bin_op = op.get(token);\n! \t\tc = bin_op.apply(a,b);\n!                 stack.push(c);\n!             }\n!         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,30 ----\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n!             Double a = (Double) stack.pop();\n!                 }\n  \n          return (Double) stack.pop();\n      }\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 252, "Time": 291.73873686790466, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 268, "Time": 280.9520728588104, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 267, "Time": 279.92277455329895, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 228, "Time": 305.24287462234497, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 14)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 241, "Time": 298.60997676849365, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n              }\n-         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,29 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 251, "Time": 289.9103157520294, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 259, "Time": 285.5258252620697, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 251, "Time": 290.7990074157715, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 253, "Time": 290.795298576355, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 14)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 255, "Time": 290.30207204818726, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n              }\n-         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,29 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 14)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 237, "Time": 301.5000035762787, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n              }\n-         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,29 ----\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 14)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 263, "Time": 283.1165363788605, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n              }\n-         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,29 ----\n"}, {"BestPatch": "StmtReplacement({'target': ('RPN_EVAL.java.xml', 14), 'ingredient': ('RPN_EVAL.java.xml', 22)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 228, "Time": 308.4887809753418, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n!             if (Double.class.isInstance(token)) {\n!                 stack.push((Double) token);\n!             } else {\n! \t\ttoken = (String) token;\n!                 Double a = (Double) stack.pop();\n!                 Double b = (Double) stack.pop();\n! \t\tDouble c = 0.0;\n! \t\tBinaryOperator<Double> bin_op = op.get(token);\n! \t\tc = bin_op.apply(a,b);\n!                 stack.push(c);\n!             }\n!         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,30 ----\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n!             Double b = (Double) stack.pop();\n! \t\t}\n  \n          return (Double) stack.pop();\n      }\n"}, {"BestPatch": "StmtReplacement({'target': ('RPN_EVAL.java.xml', 14), 'ingredient': ('RPN_EVAL.java.xml', 23)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 252, "Time": 290.609810590744, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 23,40 ****\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n!             if (Double.class.isInstance(token)) {\n!                 stack.push((Double) token);\n!             } else {\n! \t\ttoken = (String) token;\n!                 Double a = (Double) stack.pop();\n!                 Double b = (Double) stack.pop();\n! \t\tDouble c = 0.0;\n! \t\tBinaryOperator<Double> bin_op = op.get(token);\n! \t\tc = bin_op.apply(a,b);\n!                 stack.push(c);\n!             }\n!         }\n  \n          return (Double) stack.pop();\n      }\n--- 23,30 ----\n          Stack stack = new Stack();\n  \n          for (Object token : tokens) {\n!             Double c = 0.0;\n! \t\t}\n  \n          return (Double) stack.pop();\n      }\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 242, "Time": 297.9500901699066, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}, {"BestPatch": "StmtReplacement({'target': ('RPN_EVAL.java.xml', 12), 'ingredient': ('RPN_EVAL.java.xml', 22)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 274, "Time": 287.4102020263672, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n!         for (Object token : tokens) {\n!             if (Double.class.isInstance(token)) {\n!                 stack.push((Double) token);\n!             } else {\n! \t\ttoken = (String) token;\n!                 Double a = (Double) stack.pop();\n!                 Double b = (Double) stack.pop();\n! \t\tDouble c = 0.0;\n! \t\tBinaryOperator<Double> bin_op = op.get(token);\n! \t\tc = bin_op.apply(a,b);\n!                 stack.push(c);\n!             }\n!         }\n! \n!         return (Double) stack.pop();\n      }\n  }\n--- 22,28 ----\n  \n          Stack stack = new Stack();\n  \n!         Double b = (Double) stack.pop();\n! \t\treturn (Double) stack.pop();\n      }\n  }\n"}, {"BestPatch": "StmtDeletion({'target': ('RPN_EVAL.java.xml', 12)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 233, "Time": 306.6465976238251, "BestFitness": 6.0, "diff": "*** before: RPN_EVAL.java.xml\n--- after: RPN_EVAL.java.xml\n***************\n*** 22,41 ****\n  \n          Stack stack = new Stack();\n  \n-         for (Object token : tokens) {\n-             if (Double.class.isInstance(token)) {\n-                 stack.push((Double) token);\n-             } else {\n- \t\ttoken = (String) token;\n-                 Double a = (Double) stack.pop();\n-                 Double b = (Double) stack.pop();\n- \t\tDouble c = 0.0;\n- \t\tBinaryOperator<Double> bin_op = op.get(token);\n- \t\tc = bin_op.apply(a,b);\n-                 stack.push(c);\n-             }\n-         }\n- \n          return (Double) stack.pop();\n      }\n  }\n--- 22,27 ----\n"}]