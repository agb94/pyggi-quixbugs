[{"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 14), 'ingredient': ('FIND_IN_SORTED.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 365, "Time": 178.83195042610168, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 15), 'ingredient': ('FIND_IN_SORTED.java.xml', 10)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 350, "Time": 188.09494829177856, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 15), 'ingredient': ('FIND_IN_SORTED.java.xml', 4)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 363, "Time": 180.83642292022705, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,25 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             {\n!             return -1;\n!         }\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 13), 'ingredient': ('FIND_IN_SORTED.java.xml', 10)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 349, "Time": 187.81450200080872, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 16,24 ****\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n!         } else {\n              return mid;\n          }\n      }\n--- 16,23 ----\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid])return binsearch(arr, x, start, mid);\n!          else {\n              return mid;\n          }\n      }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 14), 'ingredient': ('FIND_IN_SORTED.java.xml', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 338, "Time": 193.90473222732544, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 16,24 ****\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n!         } else {\n              return mid;\n          }\n      }\n--- 16,25 ----\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid])  {\n!             return -1;\n!         }\n!          else {\n              return mid;\n          }\n      }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 13), 'ingredient': ('FIND_IN_SORTED.java.xml', 8)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 356, "Time": 183.51060676574707, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 8), 'ingredient': ('FIND_IN_SORTED.java.xml', 4)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 327, "Time": 198.81972789764404, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 14,22 ****\n              return -1;\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n!         if (x < arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n--- 14,23 ----\n              return -1;\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n!         if (x < arr[mid]){\n!             return -1;\n!         }\n!          else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 10), 'ingredient': ('FIND_IN_SORTED.java.xml', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 337, "Time": 192.89975666999817, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 15,21 ****\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n--- 15,23 ----\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n!              {\n!             return -1;\n!         }\n          } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 8), 'ingredient': ('FIND_IN_SORTED.java.xml', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 370, "Time": 176.9309196472168, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 15,22 ****\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n--- 15,23 ----\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n!             return -1;\n!         }\n!          else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 15), 'ingredient': ('FIND_IN_SORTED.java.xml', 8)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 359, "Time": 181.89727807044983, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,24 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n!         } else {\n              return mid;\n          }\n      }\n--- 17,25 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!              {\n!             return binsearch(arr, x, start, mid);\n!         }} else {\n              return mid;\n          }\n      }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 8), 'ingredient': ('FIND_IN_SORTED.java.xml', 4)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 343, "Time": 191.6582760810852, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 14,22 ****\n              return -1;\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n!         if (x < arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n--- 14,23 ----\n              return -1;\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n!         if (x < arr[mid]){\n!             return -1;\n!         }\n!          else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 13), 'ingredient': ('FIND_IN_SORTED.java.xml', 5)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 345, "Time": 189.14418029785156, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 16,24 ****\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n!         } else {\n              return mid;\n          }\n      }\n--- 16,23 ----\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid])return -1;\n!          else {\n              return mid;\n          }\n      }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 14), 'ingredient': ('FIND_IN_SORTED.java.xml', 5)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 359, "Time": 181.74794936180115, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 16,24 ****\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n!         } else {\n              return mid;\n          }\n      }\n--- 16,23 ----\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) return -1;\n!          else {\n              return mid;\n          }\n      }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 15), 'ingredient': ('FIND_IN_SORTED.java.xml', 4)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 363, "Time": 181.11517095565796, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,25 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             {\n!             return -1;\n!         }\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 8), 'ingredient': ('FIND_IN_SORTED.java.xml', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 359, "Time": 182.28501844406128, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 15,22 ****\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n--- 15,23 ----\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n          if (x < arr[mid]) {\n!             return -1;\n!         }\n!          else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 15), 'ingredient': ('FIND_IN_SORTED.java.xml', 4)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 354, "Time": 183.45180892944336, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,25 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             {\n!             return -1;\n!         }\n          } else {\n              return mid;\n          }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 8), 'ingredient': ('FIND_IN_SORTED.java.xml', 5)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 328, "Time": 196.71302342414856, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 14,22 ****\n              return -1;\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n!         if (x < arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n!         } else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n--- 14,21 ----\n              return -1;\n          }\n          int mid = start + (end - start) / 2; // check this is floor division\n!         if (x < arr[mid])return -1;\n!          else if (x > arr[mid]) {\n              return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 15), 'ingredient': ('FIND_IN_SORTED.java.xml', 8)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 351, "Time": 186.24308037757874, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,24 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n!         } else {\n              return mid;\n          }\n      }\n--- 17,25 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!              {\n!             return binsearch(arr, x, start, mid);\n!         }} else {\n              return mid;\n          }\n      }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 15), 'ingredient': ('FIND_IN_SORTED.java.xml', 9)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 357, "Time": 184.12982535362244, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,24 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n!         } else {\n              return mid;\n          }\n      }\n--- 17,25 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             {\n!             return binsearch(arr, x, start, mid);\n!         }} else {\n              return mid;\n          }\n      }\n"}, {"BestPatch": "StmtReplacement({'target': ('FIND_IN_SORTED.java.xml', 13), 'ingredient': ('FIND_IN_SORTED.java.xml', 8)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 366, "Time": 179.93049430847168, "BestFitness": 1.0, "diff": "*** before: FIND_IN_SORTED.java.xml\n--- after: FIND_IN_SORTED.java.xml\n***************\n*** 17,23 ****\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, mid, end);\n          } else {\n              return mid;\n          }\n--- 17,23 ----\n          if (x < arr[mid]) {\n              return binsearch(arr, x, start, mid);\n          } else if (x > arr[mid]) {\n!             return binsearch(arr, x, start, mid);\n          } else {\n              return mid;\n          }\n"}]