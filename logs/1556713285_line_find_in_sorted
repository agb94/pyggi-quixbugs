[{"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 304, "Time": 12.29407811164856, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,10 ****\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n!             return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n          else:\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n!             return -1\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n          else:\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 294, "Time": 12.22688341140747, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return -1\n          else:\n              return mid\n  \n"}, {"BestPatch": "LineInsertion({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 3), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 282, "Time": 12.226505994796753, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,11 ****\n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n+             return -1\n              return binsearch(mid, end)\n          else:\n              return mid\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 281, "Time": 12.23951244354248, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return -1\n          else:\n              return mid\n  \n"}, {"BestPatch": "LineInsertion({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 255, "Time": 12.316765069961548, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,9 ****\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n+             return -1\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 289, "Time": 12.310662269592285, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,10 ****\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n!             return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n          else:\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n!             return -1\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n          else:\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 6)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 302, "Time": 12.240640640258789, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(start, mid)\n          else:\n              return mid\n  \n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 267, "Time": 12.22612190246582, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return -1\n          else:\n              return mid\n  \n"}, {"BestPatch": "LineInsertion({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 255, "Time": 12.356192588806152, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,9 ****\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n+             return -1\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 268, "Time": 12.321731567382812, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,10 ****\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n!             return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n          else:\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n!             return -1\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n          else:\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 6)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 288, "Time": 12.257756471633911, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(start, mid)\n          else:\n              return mid\n  \n"}, {"BestPatch": "LineInsertion({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 283, "Time": 12.314584255218506, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,9 ****\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n+             return -1\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n"}, {"BestPatch": "LineInsertion({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 270, "Time": 12.322739601135254, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,9 ****\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n+             return -1\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 312, "Time": 12.249005556106567, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return -1\n          else:\n              return mid\n  \n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 301, "Time": 12.22188425064087, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return -1\n          else:\n              return mid\n  \n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 304, "Time": 12.278877019882202, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,10 ****\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n!             return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n          else:\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n!             return -1\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n          else:\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 6)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 258, "Time": 12.227590799331665, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(start, mid)\n          else:\n              return mid\n  \n"}, {"BestPatch": "LineInsertion({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 287, "Time": 12.301940441131592, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,9 ****\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n+             return -1\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n"}, {"BestPatch": "LineInsertion({'target': ('find_in_sorted.py', 6), 'ingredient': ('find_in_sorted.py', 3), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 293, "Time": 12.283779382705688, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 4,9 ****\n--- 4,10 ----\n              return -1\n          mid = start + (end - start) // 2\n          if x < arr[mid]:\n+             return -1\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n              return binsearch(mid, end)\n"}, {"BestPatch": "LineReplacement({'target': ('find_in_sorted.py', 8), 'ingredient': ('find_in_sorted.py', 3)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 309, "Time": 12.238877058029175, "BestFitness": 1.0, "diff": "*** before: find_in_sorted.py\n--- after: find_in_sorted.py\n***************\n*** 6,12 ****\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return binsearch(mid, end)\n          else:\n              return mid\n  \n--- 6,12 ----\n          if x < arr[mid]:\n              return binsearch(start, mid)\n          elif x > arr[mid]:\n!             return -1\n          else:\n              return mid\n  \n"}]