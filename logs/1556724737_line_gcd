[{"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 303, "Time": 12.537514925003052, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 326, "Time": 12.600515365600586, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 308, "Time": 12.526803255081177, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 314, "Time": 12.775108575820923, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineInsertion({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 283, "Time": 12.346719026565552, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n--- 2,6 ----\n      if b == 0:\n          return a\n      else:\n+         return a\n          return gcd(a % b, b)\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 315, "Time": 12.43493127822876, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 320, "Time": 12.493239402770996, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 3), 'ingredient': ('gcd.py', 0)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 239, "Time": 12.609814167022705, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 1,5 ****\n  def gcd(a, b):\n      if b == 0:\n          return a\n!     else:\n          return gcd(a % b, b)\n--- 1,5 ----\n  def gcd(a, b):\n      if b == 0:\n          return a\n! def gcd(a, b):\n          return gcd(a % b, b)\n"}, {"BestPatch": "LineInsertion({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 277, "Time": 12.430207252502441, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n--- 2,6 ----\n      if b == 0:\n          return a\n      else:\n+         return a\n          return gcd(a % b, b)\n"}, {"BestPatch": "LineInsertion({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 257, "Time": 12.469302654266357, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n--- 2,6 ----\n      if b == 0:\n          return a\n      else:\n+         return a\n          return gcd(a % b, b)\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 315, "Time": 12.491201639175415, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 313, "Time": 12.462088823318481, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineInsertion({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 288, "Time": 12.49445652961731, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n--- 2,6 ----\n      if b == 0:\n          return a\n      else:\n+         return a\n          return gcd(a % b, b)\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 315, "Time": 12.485851764678955, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 318, "Time": 12.688021659851074, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 319, "Time": 12.469503164291382, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 293, "Time": 12.590531587600708, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineInsertion({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2), 'direction': 'before'})", "Success": false, "FitnessEval": 500, "InvalidPatch": 245, "Time": 12.694317817687988, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n--- 2,6 ----\n      if b == 0:\n          return a\n      else:\n+         return a\n          return gcd(a % b, b)\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 308, "Time": 12.537983655929565, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}, {"BestPatch": "LineReplacement({'target': ('gcd.py', 4), 'ingredient': ('gcd.py', 2)})", "Success": false, "FitnessEval": 500, "InvalidPatch": 323, "Time": 12.387414455413818, "BestFitness": 2.0, "diff": "*** before: gcd.py\n--- after: gcd.py\n***************\n*** 2,5 ****\n      if b == 0:\n          return a\n      else:\n!         return gcd(a % b, b)\n--- 2,5 ----\n      if b == 0:\n          return a\n      else:\n!         return a\n"}]