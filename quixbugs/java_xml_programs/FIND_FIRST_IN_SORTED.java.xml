<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5" language="Java" filename="home/aymeric/git/QuixBugs/java_programs/FIND_FIRST_IN_SORTED.java"><package>package <name>java_programs</name>;</package>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>*</name></name>;</import>

<comment type="block">/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */</comment>

<comment type="block" format="javadoc">/**
 *
 * @author derricklin
 */</comment>
<class><specifier>public</specifier> class <name>FIND_FIRST_IN_SORTED</name> <block>{

    <function><specifier>public</specifier> <specifier>static</specifier> <type><name>int</name></type> <name>find_first_in_sorted</name><parameter_list>(<parameter><decl><type><name><name>int</name><index>[]</index></name></type> <name>arr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{
        <decl_stmt><decl><type><name>int</name></type> <name>lo</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>hi</name> <init>= <expr><name><name>arr</name><operator>.</operator><name>length</name></name></expr></init></decl>;</decl_stmt>

        <while>while <condition>(<expr><name>lo</name> <operator>&lt;=</operator> <name>hi</name></expr>)</condition> <block>{
            <decl_stmt><decl><type><name>int</name></type> <name>mid</name> <init>= <expr><operator>(</operator><name>lo</name> <operator>+</operator> <name>hi</name><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt> <comment type="line">// check if this is floor division</comment>

            <if>if <condition>(<expr><name>x</name> <operator>==</operator> <name><name>arr</name><index>[<expr><name>mid</name></expr>]</index></name> <operator>&amp;&amp;</operator> <operator>(</operator><name>mid</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>x</name> <operator>!=</operator> <name><name>arr</name><index>[<expr><name>mid</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator></expr>)</condition><then> <block>{
                <return>return <expr><name>mid</name></expr>;</return>
            }</block></then> <elseif>else <if>if <condition>(<expr><name>x</name> <operator>&lt;=</operator> <name><name>arr</name><index>[<expr><name>mid</name></expr>]</index></name></expr>)</condition><then> <block>{
                <expr_stmt><expr><name>hi</name> <operator>=</operator> <name>mid</name></expr>;</expr_stmt>
            }</block></then></if></elseif> <else>else <block>{
                <expr_stmt><expr><name>lo</name> <operator>=</operator> <name>mid</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
            }</block></else></if>
        }</block></while>

        <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
    }</block></function>

}</block></class>
</unit>
